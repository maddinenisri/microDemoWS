version: '2'
services:
  zookeeper:
    image: confluent/zookeeper
    expose:
      - 2181    
    ports:
      - "2181:2181"
    networks:
      - my-sample-network
    volumes:
      - sample-volume:/var/lib/sample/zookeeper
    logging:
      driver: json-file
  kafka:
    image: wurstmeister/kafka:0.9.0.0-1
    expose:
      - 9092    
    ports:
      - "9092:9092"
    links:
      - zookeeper:zk
    depends_on:
      - zookeeper
    environment:
      - KAFKA_ADVERTISED_HOST_NAME
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_DELETE_TOPIC_ENABLE=true
      - KAFKA_LOG_RETENTION_HOURS=1
      - KAFKA_MESSAGE_MAX_BYTES=10000000
      - KAFKA_REPLICA_FETCH_MAX_BYTES=10000000
      - KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS=60000
      - KAFKA_NUM_PARTITIONS=2
      - KAFKA_DELETE_RETENTION_MS=1000
    networks:
      - my-sample-network
    volumes:
      - sample-volume:/var/lib/sample/kafka
    logging:
      driver: json-file
  kafka-manager:
    image: sheepkiller/kafka-manager:latest
    expose:
      - 9000
    ports:
      - "9000:9000"
    links:
      - zookeeper
      - kafka
    depends_on:
      - zookeeper
      - kafka
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: letmein
      KM_ARGS: -Djava.net.preferIPv4Stack=true
    networks:
      - my-sample-network
    volumes:
      - sample-volume:/var/lib/sample/kafka-manager
    logging:
      driver: json-file
  sample-service-registry:
    container_name: sample-service-registry
    image: com.mdstech.microservices.demo/sample-service-registry:1.0-SNAPSHOT
    expose:
      - 8761
    ports:
      - 8761:8761  
    networks:
      - my-sample-network
    volumes:
      - sample-volume:/var/lib/sample/sample-service-registry
    logging:
      driver: json-file
  config-server:
    container_name: config-server
    image: com.mdstech.microservices.demo/config-server:1.0-SNAPSHOT
    environment:
      EUREKA_URI: http://sample-service-registry:8761/eureka
    expose:
      - 8888
    ports:
      - 8888:8888
    entrypoint: /wait-for-it.sh sample-service-registry:8761 -- java -Djava.security.egd=file:/dev/./urandom -jar /app.jar
    networks:
      - my-sample-network
    links:
      - sample-service-registry:sample-service-registry
    depends_on:
      - sample-service-registry
    volumes:
      - sample-volume:/var/lib/sample/config-server
    logging:
      driver: json-file
  sample-client:
    container_name: sample-client
    image: com.mdstech.microservices.demo/sample-client:1.0-SNAPSHOT
    environment:
      EUREKA_URI: http://sample-service-registry:8761/eureka
    expose:
      - 8081
    ports:
      - 8081:8081
    networks:
      - my-sample-network
    links:
      - sample-service-registry:sample-service-registry
      - config-server:config-server
    depends_on:
      - sample-service-registry
      - config-server
    volumes:
      - sample-volume:/var/lib/sample/sample-client
    logging:
      driver: json-file
  sample-feign-integration:
    container_name: sample-feign-integration
    image: com.mdstech.microservices.demo/sample-feign-integration:1.0-SNAPSHOT
    environment:
      EUREKA_URI: http://sample-service-registry:8761/eureka
    expose:
      - 9090
    ports:
      - 9090:9090
    networks:
      - my-sample-network
    links:
      - sample-service-registry:sample-service-registry
      - config-server:config-server
      - sample-client:sample-client
    depends_on:
      - sample-service-registry
      - config-server
      - sample-client
    volumes:
      - sample-volume:/var/lib/sample/sample-feign-integration
    logging:
      driver: json-file

networks:
  my-sample-network:
    driver: bridge

volumes:
  sample-volume:
    external: true

